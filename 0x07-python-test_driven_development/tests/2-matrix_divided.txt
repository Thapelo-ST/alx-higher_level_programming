============================
How to use 2-matrix_divided.py
============================

This function/module divides numbers in a matrix

Example
=======
matrix = [
    [1, 2, 3],
    [4, 5, 6]
]

will result in
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

Importing the function and doc string.
======================================
first import the module:
::
    >>> matrix_divided = __import__("2-matrix_divided").matrix_divided

Import the docstring.
::
    >>> m = __import__("2-matrix_divided").__doc__
    >>> len(m) > 1
    True

Using the function:
===================

with numbers:
::

    >>> matrix = [[1, 2, 3], [4, 5, 6]]
    >>> matrix_divided(matrix, 3)
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]


with floats:
::
    >>> matrix = [
    ... [1.3, 2.0, 3.5],
    ... [2, 3, 4.4]
    ... ]
    >>> matrix_divided(matrix, 3)
    [[0.43, 0.67, 1.17], [0.67, 1.0, 1.47]]

with mixed numbers and strings:
::
    >>> matrix = [
    ...     [5j, 20, 1],
    ...     [3.5, 'l', 45.3]
    ... ]
    >>> matrix_divided(matrix, 3)
    Traceback (most recent call last):
        ...
    TypeError: type complex doesn't define __round__ method

using strings only:
::
    >>> matrix = [
    ... ['j', 'key', 'div'],
    ... ['banana', '98', 'street']
    ... ]
    >>> matrix_divided(matrix, 2)
    Traceback (most recent call last):
        ...
    TypeError: unsupported operand type(s) for /: 'str' and 'int'

dividing with nothing and dividing with zero:
::
    >>> matrix=[[1, 2, 3], [4, 5, 6]]
    >>> matrix_divided(matrix, )
    Traceback (most recent call last):
        ...
    TypeError: matrix_divided() missing 1 required positional argument: 'div'

::
    >>> matrix=[[1, 2, 3], [4, 5, 6]]
    >>> matrix_divided(matrix, 0)
    Traceback (most recent call last):
        ...
    ZeroDivisionError: division by zero

test using an empty matrix:
::
    >>> matrix = []
    >>> matrix_divided(matrix, 3)
    Traceback (most recent call last):
        ...
    TypeError: matrix must not be empty

test using an empty row:
::
    >>> matrix = [[], [1, 2, 3]]
    >>> matrix_divided(matrix, 2)
    Traceback (most recent call last):
        ...
    TypeError: Each row of the matrix must have the same size

using a non-matrix input:
::
    >>> matrix = [1, 2, 3]
    >>> matrix_divided(matrix, 4)
    Traceback (most recent call last):
        ...
    TypeError: 'bool' object is not iterable

::
    >>> matrix = 'matrix'
    >>> matrix_divided(matrix, 4)
    Traceback (most recent call last):
        ...
    TypeError: 'bool' object is not iterable

test using inconsistent rows:
::
    >>> matrix = [[1, 2], [3, 4, 5], [6, 7]]
    >>> matrix_divided(matrix, 10)
    Traceback (most recent call last):
        ...
    TypeError: Each row of the matrix must have the same size